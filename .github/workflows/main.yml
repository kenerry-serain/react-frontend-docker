on:
  workflow_dispatch:
  push:
  
env:            
  ECR_REPOSITORY: react-frontend-docker          
  
jobs:
  frontendDeplyoment:
    name: EKS Frontend Deployment
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['20.x']
        os: [ubuntu-latest]

    steps:
    - name: Checking out
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      working-directory: app
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Kubectl Edit Image
      working-directory: deployment
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
       kustomize edit set image $ECR_REGISTRY/$ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Kubectl Apply
      working-directory: deployment
      run: |
       ls
       cat kustomization.yml
       kubectl apply -k .
